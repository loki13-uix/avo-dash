#!/bin/bash

set -e  # Exit immediately if a command fails

# Colors for formatting output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Helper functions for logging
log_info() { echo -e "${BLUE}$1${NC}"; }
log_success() { echo -e "${GREEN}$1${NC}"; }
log_warning() { echo -e "${YELLOW}$1${NC}"; }
log_error() { echo -e "${RED}$1${NC}"; }

handle_error() {
  log_error "❌ $1"
  exit 1
}

check_dependencies() {
  log_info "🔍 Checking dependencies..."
  for cmd in "npx" "git"; do
    if ! command -v "$cmd" &>/dev/null; then
      handle_error "$cmd not found. Please install it before continuing."
    fi
  done
}

main() {
  log_info "🚀 Running Pre-Commit Checks..."

  check_dependencies

  # Run biome:fix
  log_info "🔄 Running Biome auto-fix..."
  if ! npm run biome:fix; then
    log_warning "⚠️ Biome couldn't fix all issues automatically. Some manual fixes may be required."
  fi

  # Run biome:lint
  log_info "🎨 Running Biome lint..."
  if ! npm run biome:lint; then
    handle_error "Biome found issues! Fix them before committing."
  fi

  # Run biome:format
  log_info "💅 Running Biome format..."
  if ! npm run biome:format; then
    handle_error "Biome formatting failed! Fix errors before committing."
  fi

  # Run ts:check
  log_info "🛠 Checking TypeScript types..."
  if ! npm run ts:check; then
    handle_error "Type errors found! Fix them before committing."
  fi

  # Run build:check if not skipped
  if [ -z "$SKIP_BUILD" ]; then
    log_info "🏗 Checking Next.js Build..."
    if ! npm run build:check; then
      handle_error "Build failed! Fix it before committing."
    fi
  else
    log_warning "⚠️ Skipping build as requested via SKIP_BUILD env variable."
  fi

  # Run storybook:check if not skipped
  if [ -z "$SKIP_STORYBOOK" ]; then
    log_info "📚 Checking Storybook Build..."
    if ! npm run build-storybook; then
      handle_error "Storybook build failed! Fix it before committing."
    fi
  else
    log_warning "⚠️ Skipping Storybook build as requested via SKIP_STORYBOOK env variable."
  fi

  # Stage fixed files
  git add -u || log_warning "⚠️ No files were automatically fixed."

  log_success "✅ All pre-commit checks passed!"
  exit 0
}

# Run main function
main
